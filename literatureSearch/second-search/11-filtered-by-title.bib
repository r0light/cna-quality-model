@InCollection{Mubarkoot2021,
  author    = {Mohammed Mubarkoot and Jörn Altmann},
  booktitle = {Economics of Grids, Clouds, Systems, and Services},
  publisher = {Springer International Publishing},
  title     = {Towards Software Compliance Specification and Enforcement Using {TOSCA}},
  year      = {2021},
  pages     = {168--177},
  doi       = {10.1007/978-3-030-92916-9_14},
  url       = {https://doi.org/10.1007%2F978-3-030-92916-9_14},
}

@Article{ArizaPorras2021,
  author    = {Christian Ariza-Porras and Valentin Kuznetsov and Federica Legger},
  journal   = {Computing and Software for Big Science},
  title     = {The {CMS} monitoring infrastructure and applications},
  year      = {2021},
  month     = {jan},
  number    = {1},
  volume    = {5},
  doi       = {10.1007/s41781-020-00051-x},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs41781-020-00051-x},
}

@Article{Li2021,
  author    = {Bowen Li and Xin Peng and Qilin Xiang and Hanzhang Wang and Tao Xie and Jun Sun and Xuanzhe Liu},
  journal   = {Empirical Software Engineering},
  title     = {Enjoy your observability: an industrial survey of microservice tracing and analysis},
  year      = {2021},
  month     = {nov},
  number    = {1},
  volume    = {27},
  doi       = {10.1007/s10664-021-10063-9},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs10664-021-10063-9},
}

@InProceedings{Morais2021,
  author    = {Morais, Gabriel and Bork, Dominik and Adda, Mehdi},
  booktitle = {Proceedings of the 13th International Conference on Management of Digital EcoSystems},
  title     = {Towards an Ontology-Driven Approach to Model and Analyze Microservices Architectures},
  year      = {2021},
  address   = {New York, NY, USA},
  pages     = {79–86},
  publisher = {Association for Computing Machinery},
  series    = {MEDES '21},
  abstract  = {Microservices Architectures (MSAs) are continuously replacing monolithic systems toward achieving more flexible and maintainable service-oriented software systems. However, the shift toward an MSA also requires a technological and managerial shift for its adopters. Architecting and managing MSAs represent unique challenges, including microservices' identification, interoperability, and reuse. To handle these challenges, we propose an Ontology-driven Conceptual Modelling approach, based on the Ontology of Microservices Architecture Concepts (OMSAC), for modelling and analyzing microservices-based systems. We show, how OMSAC-based conceptual models, stocked in a Stardog triple store, support Stakeholder-specific communication, documentation, and reuse. This paper reports on the application of our approach in three open-source MSA systems with a focus on microservices' discovery based on similarity metrics. Eventually, we compare the extracted similarity metrics derived from the application of machine learning techniques to the OMSAC models with a manual analysis performed by experts.},
  doi       = {10.1145/3444757.3485108},
  isbn      = {9781450383141},
  keywords  = {Microservices, Stardog, ontology, OMSAC, machine learning},
  location  = {Virtual Event, Tunisia},
  numpages  = {8},
  url       = {https://doi.org/10.1145/3444757.3485108},
}

@InProceedings{Allen2021,
  author    = {Allen, Sadie and Toslali, Mert and Parthasarathy, Srinivasan and Oliveira, Fabio and Coskun, Ayse K.},
  booktitle = {Proceedings of the Seventh International Workshop on Container Technologies and Container Clouds},
  title     = {Tritium: A Cross-Layer Analytics System for Enhancing Microservice Rollouts in the Cloud},
  year      = {2021},
  address   = {New York, NY, USA},
  pages     = {19–24},
  publisher = {Association for Computing Machinery},
  series    = {WoC '21},
  abstract  = {Microservice architectures are widely used in cloud-native applications as their modularity allows for independent development and deployment of components. With the many complex interactions occurring in between components, it is difficult to determine the effects of a particular microservice rollout. Site Reliability Engineers must be able to determine with confidence whether a new rollout is at fault for a concurrent or subsequent performance problem in the system so they can quickly mitigate the issue. We present Tritium, a cross-layer analytics system that synthesizes several types of data to suggest possible causes for Service Level Objective (SLO) violations in microservice applications. It uses event data to identify new version rollouts, tracing data to build a topology graph for the cluster and determine services potentially affected by the rollout, and causal impact analysis applied to metric time-series to determine if the rollout is at fault. Tritium works based on the principle that if a rollout is not responsible for a change in an upstream or neighboring SLO metric, then the rollout's telemetry data will do a poor job predicting the behavior of that SLO metric. In this paper, we experimentally demonstrate that Tritium can accurately attribute SLO violations to downstream rollouts and outline the steps necessary to fully realize Tritium.},
  doi       = {10.1145/3493649.3493656},
  isbn      = {9781450391719},
  keywords  = {container systems, microservices, version rollouts, Fault diagnosis},
  location  = {Virtual Event, Canada},
  numpages  = {6},
  url       = {https://doi.org/10.1145/3493649.3493656},
}

@InProceedings{Jiang2023,
  author    = {Jiang, Xinrui and Pan, Yicheng and Ma, Meng and Wang, Ping},
  booktitle = {Proceedings of the ACM Web Conference 2023},
  title     = {Look Deep into the Microservice System Anomaly through Very Sparse Logs},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {2970–2978},
  publisher = {Association for Computing Machinery},
  series    = {WWW '23},
  abstract  = {Intensive monitoring and anomaly diagnosis have become a knotty problem for modern microservice architecture due to the dynamics of service dependency. While most previous studies rely heavily on ample monitoring metrics, we raise a fundamental but always neglected issue - the diagnostic metric integrity problem. This paper solves the problem by proposing MicroCU – a novel approach to diagnose microservice systems using very sparse API logs. We design a structure named dynamic causal curves to portray time-varying service dependencies and a temporal dynamics discovery algorithm based on Granger causal intervals. Our algorithm generates a smoother space of causal curves and designs the concept of causal unimodalization to calibrate the causality infidelities brought by missing metrics. Finally, a path search algorithm on dynamic causality graphs is proposed to pinpoint the root cause. Experiments on commercial system cases show that MicroCU outperforms many state-of-the-art approaches and reflects the superiorities of causal unimodalization to raw metric imputation.},
  doi       = {10.1145/3543507.3583338},
  isbn      = {9781450394161},
  keywords  = {Microservice architecture, Anomaly diagnosis, Root cause analysis, Dynamic Granger causality},
  location  = {Austin, TX, USA},
  numpages  = {9},
  url       = {https://doi.org/10.1145/3543507.3583338},
}

@InProceedings{Belkhiri2023,
  author    = {Belkhiri, Adel and Shahnejat Bushehri, Ahmad and Gohring de Magalhaes, Felipe and Nicolescu, Gabriela},
  booktitle = {Companion of the 2023 ACM/SPEC International Conference on Performance Engineering},
  title     = {Transparent Trace Annotation for Performance Debugging in Microservice-Oriented Systems (Work In Progress Paper)},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {25–32},
  publisher = {Association for Computing Machinery},
  series    = {ICPE '23 Companion},
  abstract  = {Microservices is a cloud-native architecture in which a single application is implemented as a collection of small, independent, and loosely-coupled services. This architecture is gaining popularity in the industry as it promises to make applications more scalable and easier to develop and deploy. Nonetheless, adopting this architecture in practice has raised many concerns, particularly regarding the difficulty of diagnosing performance bugs and explaining abnormal software behaviour. Fortunately, many tools based on distributed tracing were proposed to achieve observability in microservice-oriented systems and address these concerns (e.g., Jaeger). Distributed tracing is a method for tracking user requests as they flow between services. While these tools can identify slow services and detect latency-related problems, they mostly fail to pinpoint the root causes of these issues.This paper presents a new approach for enacting cross-layer tracing of microservice-based applications. It also proposes a framework for annotating traces generated by most distributed tracing tools with relevant tracing data and metrics collected from the kernel. The information added to the traces aims at helping the practitioner get a clear insight into the operations of the application executing user requests. The framework we present is notably efficient in diagnosing the causes of long tail latencies. Unlike other solutions, our approach for annotating traces is completely transparent as it does not require the modification of the application, the tracer, or the operating system. Furthermore, our evaluation shows that this approach incurs low overhead costs.},
  doi       = {10.1145/3578245.3585030},
  isbn      = {9798400700729},
  keywords  = {microservices, performance analysis, distributed systems, software tracing},
  location  = {Coimbra, Portugal},
  numpages  = {8},
  url       = {https://doi.org/10.1145/3578245.3585030},
}

@InProceedings{Zolait2021,
  author    = {Zolait, Ali Hussein and Alalas, Sumaya and Ali, Noor and Showaiter, Aya},
  booktitle = {2021 International Conference on Innovation and Intelligence for Informatics, Computing, and Technologies (3ICT)},
  title     = {Quality of Life Integrated Framework: Perspective of Cloud Computing Usage},
  year      = {2021},
  pages     = {537-544},
  doi       = {10.1109/3ICT53449.2021.9581580},
}

@InProceedings{Yilmaz2021,
  author    = {Yilmaz, Rahime and Buzluca, Feza},
  booktitle = {2021 2nd International Informatics and Software Engineering Conference (IISEC)},
  title     = {A Fuzzy Quality Model to Measure the Maintainability of Microservice Architectures},
  year      = {2021},
  pages     = {1-6},
  doi       = {10.1109/IISEC54230.2021.9672417},
}

@InProceedings{Luo2022,
  author    = {Luo, Shutian and Xu, Huanle and Ye, Kejiang and Xu, Guoyao and Zhang, Liping and Yang, Guodong and Xu, Chengzhong},
  booktitle = {Proceedings of the 13th Symposium on Cloud Computing},
  title     = {The Power of Prediction: Microservice Auto Scaling via Workload Learning},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {355–369},
  publisher = {Association for Computing Machinery},
  series    = {SoCC '22},
  abstract  = {When deploying microservices in production clusters, it is critical to automatically scale containers to improve cluster utilization and ensure service level agreements (SLA). Although reactive scaling approaches work well for monolithic architectures, they are not necessarily suitable for microservice frameworks due to the long delay caused by complex microservice call chains. In contrast, existing proactive approaches leverage end-to-end performance prediction for scaling, but cannot effectively handle microservice multiplexing and dynamic microservice dependencies.In this paper, we present Madu, a proactive microservice auto-scaler that scales containers based on predictions for individual microservices. Madu learns workload uncertainty to handle the highly dynamic dependency between microservices. Additionally, Madu adopts OS-level metrics to optimize resource usage while maintaining good control over scaling overhead. Experiments on large-scale deployments of microservices in Alibaba clusters show that the overall prediction accuracy of Madu can reach as high as 92.3% on average, which is 13% higher than the state-of-the-art approaches. Furthermore, experiments running real-world microservice benchmarks in a local cluster of 20 servers show that Madu can reduce the overall resource usage by 1.7X compared to reactive solutions, while reducing end-to-end service latency by 50%.},
  doi       = {10.1145/3542929.3563477},
  isbn      = {9781450394147},
  keywords  = {microservices, workload uncertainty learning, proactive auto-scaler},
  location  = {San Francisco, California},
  numpages  = {15},
  url       = {https://doi.org/10.1145/3542929.3563477},
}

@InProceedings{Moreira2022,
  author    = {Moreira, Mateus Gabi and De Fran\c{c}a, Breno Bernard Nicolau},
  booktitle = {Proceedings of the 16th Brazilian Symposium on Software Components, Architectures, and Reuse},
  title     = {Analysis of Microservice Evolution Using Cohesion Metrics},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {40–49},
  publisher = {Association for Computing Machinery},
  series    = {SBCARS '22},
  abstract  = {The adoption of Microservices Architecture (MSA) has increased in recent years due to several claimed benefits, such as reducing deployment complexity, supporting technology diversity, and better scalability. However, MSA is not free from maintainability issues, especially the lack of cohesion, in which microservices possibly concentrate or miss responsibilities. Also, the lack of empirically-validated cohesion metrics for MSA makes the quantitative assessment even more challenging. In this paper, we empirically explore the practical applicability of service-level cohesion metrics in an open-source MSA application context. The qualitative results show the possibility of assessing MSA cohesion using these service-level metrics, the feasibility of tracking software evolution, and an indication of possible technical debts along the way.},
  doi       = {10.1145/3559712.3559716},
  file      = {:10.1145_3559712.3559716 - Analysis of Microservice Evolution Using Cohesion Metrics.pdf:PDF},
  isbn      = {9781450397452},
  keywords  = {Cohesion Metrics, Software evolution, Microservices, Software architecture},
  location  = {Uberlandia, Brazil},
  numpages  = {10},
  url       = {https://doi.org/10.1145/3559712.3559716},
}

@InProceedings{Camilli2022,
  author    = {Camilli, Matteo and Guerriero, Antonio and Janes, Andrea and Russo, Barbara and Russo, Stefano},
  booktitle = {Proceedings of the 3rd ACM/IEEE International Conference on Automation of Software Test},
  title     = {Microservices Integrated Performance and Reliability Testing},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {29–39},
  publisher = {Association for Computing Machinery},
  series    = {AST '22},
  abstract  = {Continuous quality assurance for extra-functional properties of modern software systems is today a big challenge as their complexity is constantly increasing to satisfy market demands. This is the case of microservice systems. They provide high control on the scale of operation by means of fine-grained service decomposition, but this demands careful consideration of the relations between performance of individual microservices and service failures.In this work, we propose MIPaRT, a novel methodology, and platform to automatically test microservice operations for performance and reliability in combination. The proposed platform can be integrated into a DevOps cycle to support continuous testing and monitoring by the automatic (1) generation and execution of performance-reliability ex-vivo testing sessions, (2) collection of monitoring data, (3) computation of performance and reliability metrics, and (4) integrated visualization of the results.We apply our approach by operating the platform on an open source benchmark. Results show that our integrated approach can provide additional insights into the performance and reliability behaviour of microservices as well as their mutual relationships.},
  doi       = {10.1145/3524481.3527233},
  isbn      = {9781450392860},
  keywords  = {performance testing, reliability testing, microservices systems},
  location  = {Pittsburgh, Pennsylvania},
  numpages  = {11},
  url       = {https://doi.org/10.1145/3524481.3527233},
}

@InProceedings{Peng2022,
  author    = {Peng, Xin and Zhang, Chenxi and Zhao, Zhongyuan and Isami, Akasaka and Guo, Xiaofeng and Cui, Yunna},
  booktitle = {Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  title     = {Trace Analysis Based Microservice Architecture Measurement},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {1589–1599},
  publisher = {Association for Computing Machinery},
  series    = {ESEC/FSE 2022},
  abstract  = {Microservice architecture design highly relies on expert experience and may often result in improper service decomposition. Moreover, a microservice architecture is likely to degrade with the continuous evolution of services. Architecture measurement is thus important for the long-term evolution of microservice architectures. Due to the independent and dynamic nature of services, source code analysis based approaches cannot well capture the interactions between services. In this paper, we propose a trace analysis based microservice architecture measurement approach. We define a trace data model for microservice architecture measurement, which enables fine-grained analysis of the execution processes of requests and the interactions between interfaces and services. Based on the data model, we define 14 architectural metrics to measure the service independence and invocation chain complexity of a microservice system. We implement the approach and conduct three case studies with a student course project, an open-source microservice benchmark system, and three industrial microservice systems. The results show that our approach can well characterize the independence and invocation chain complexity of microservice architectures and help developers to identify microservice architecture issues caused by improper service decomposition and architecture degradation.},
  doi       = {10.1145/3540250.3558951},
  isbn      = {9781450394130},
  keywords  = {Dynamic analysis, Architecture, Tracing, Microservice},
  location  = {Singapore, Singapore},
  numpages  = {11},
  url       = {https://doi.org/10.1145/3540250.3558951},
}

@InProceedings{Liang2023,
  author    = {Liang, Mingyu and Gan, Yu and Li, Yueying and Torres, Carlos and Dhanotia, Abhishek and Ketkar, Mahesh and Delimitrou, Christina},
  booktitle = {Proceedings of the 28th ACM International Conference on Architectural Support for Programming Languages and Operating Systems, Volume 2},
  title     = {Ditto: End-to-End Application Cloning for Networked Cloud Services},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {222–236},
  publisher = {Association for Computing Machinery},
  series    = {ASPLOS 2023},
  abstract  = {The lack of representative, publicly-available cloud services has been a recurring problem in the architecture and systems communities. While open-source benchmarks exist, they do not capture the full complexity of cloud services. Application cloning is a promising way to address this, however, prior work is limited to CPU-/cache-centric, single-node services, operating at user level. We present Ditto, an automated framework for cloning end-to-end cloud applications, both monolithic and microservices, which captures I/O and network activity, as well as kernel operations, in addition to application logic. Ditto takes a hierarchical approach to application cloning, starting with capturing the dependency graph across distributed services, to recreating each tier's control/data flow, and finally generating system calls and assembly that mimics the individual applications. Ditto does not reveal the logic of the original application, facilitating publicly sharing clones of production services with hardware vendors, cloud providers, and the research community. We show that across a diverse set of single- and multi-tier applications, Ditto accurately captures their CPU and memory characteristics as well as their high-level performance metrics, is portable across platforms, and facilitates a wide range of system studies.},
  doi       = {10.1145/3575693.3575751},
  file      = {:10.1145_3575693.3575751 - Ditto_ End to End Application Cloning for Networked Cloud Services.pdf:PDF},
  isbn      = {9781450399166},
  keywords  = {software reverse engineering, cloud computing, microservices, architecture, benchmarking and emulation},
  location  = {Vancouver, BC, Canada},
  numpages  = {15},
  url       = {https://doi.org/10.1145/3575693.3575751},
}

@InProceedings{Li2022,
  author    = {Li, Richard and Du, Min and Wang, Zheng and Chang, Hyunseok and Mukherjee, Sarit and Eide, Eric},
  booktitle = {Proceedings of the 2022 ACM/SPEC on International Conference on Performance Engineering},
  title     = {LongTale: Toward Automatic Performance Anomaly Explanation in Microservices},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {5–16},
  publisher = {Association for Computing Machinery},
  series    = {ICPE '22},
  abstract  = {Performance troubleshooting is notoriously difficult for distributed microservices-based applications. A typical root-cause diagnosis for performance anomaly by an analyst starts by narrowing down the scope of slow services, investigates into high-level performance metrics or available logs in the slow components, and finally drills down to an actual cause. This process can be long, tedious, and sometimes aimless due to the lack of domain knowledge and the sheer number of possible culprits. This paper introduces a new machine-learning-driven performance analysis system called LongTale that automates the troubleshooting process for latency-related performance anomalies to facilitate the root cause diagnosis and explanation. LongTale builds on existing application-layer tracing in two significant aspects. First, it stitches application-layer traces with corresponding system stack traces, which enables more informative root-cause analysis. Second, it utilizes a novel machine-learning-driven analysis that feeds on the combined data to automatically uncover the most likely contributing factor(s) for given performance slowdown. We demonstrate how LongTale can be utilized in different scenarios, including abnormal long-tail latency explanation and performance interference analysis.},
  doi       = {10.1145/3489525.3511675},
  isbn      = {9781450391436},
  keywords  = {cross-layer tracing, tail latency, performance analysis},
  location  = {Beijing, China},
  numpages  = {12},
  url       = {https://doi.org/10.1145/3489525.3511675},
}

@InProceedings{Chakraborty2023,
  author    = {Chakraborty, Sarthak and Garg, Shaddy and Agarwal, Shubham and Chauhan, Ayush and Saini, Shiv Kumar},
  booktitle = {Proceedings of the ACM Web Conference 2023},
  title     = {CausIL: Causal Graph for Instance Level Microservice Data},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {2905–2915},
  publisher = {Association for Computing Machinery},
  series    = {WWW '23},
  abstract  = {AI-based monitoring has become crucial for cloud-based services due to its scale. A common approach to AI-based monitoring is to detect causal relationships among service components and build a causal graph. Availability of domain information makes cloud systems even better suited for such causal detection approaches. In modern cloud systems, however, auto-scalers dynamically change the number of microservice instances, and a load-balancer manages the load on each instance. This poses a challenge for off-the-shelf causal structure detection techniques as they neither incorporate the system architectural domain information nor provide a way to model distributed compute across varying numbers of service instances. To address this, we develop CausIL, which detects a causal structure among service metrics by considering compute distributed across dynamic instances and incorporating domain knowledge derived from system architecture. Towards the application in cloud systems, CausIL estimates a causal graph using instance-specific variations in performance metrics, modeling multiple instances of a service as independent, conditional on system assumptions. Simulation study shows the efficacy of CausIL over baselines by improving graph estimation accuracy by ∼ 25% as measured by Structural Hamming Distance whereas the real-world dataset demonstrates CausIL’s applicability in deployment settings.},
  doi       = {10.1145/3543507.3583274},
  isbn      = {9781450394161},
  keywords  = {Causal Structure Detection, Causal Graph, Microservices, System Monitoring},
  location  = {Austin, TX, USA},
  numpages  = {11},
  url       = {https://doi.org/10.1145/3543507.3583274},
}

@InProceedings{Zhang2022a,
  author    = {Zhang, Chenxi and Peng, Xin and Zhou, Tong and Sha, Chaofeng and Yan, Zhenghui and Chen, Yiru and Yang, Hong},
  booktitle = {Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  title     = {TraceCRL: Contrastive Representation Learning for Microservice Trace Analysis},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {1221–1232},
  publisher = {Association for Computing Machinery},
  series    = {ESEC/FSE 2022},
  abstract  = {Due to the large amount and high complexity of trace data, microservice trace analysis tasks such as anomaly detection, fault diagnosis, and tail-based sampling widely adopt machine learning technology. These trace analysis approaches usually use a preprocessing step to map structured features of traces to vector representations in an ad-hoc way. Therefore, they may lose important information such as topological dependencies between service operations. In this paper, we propose TraceCRL, a trace representation learning approach based on contrastive learning and graph neural network, which can incorporate graph structured information in the downstream trace analysis tasks. Given a trace, TraceCRL constructs an operation invocation graph where nodes represent service operations and edges represent operation invocations together with predefined features for invocation status and related metrics. Based on the operation invocation graphs of traces TraceCRL uses a contrastive learning method to train a graph neural network-based model for trace representation. In particular, TraceCRL employs six trace data augmentation strategies to alleviate the problems of class collision and uniformity of representation in contrastive learning. Our experimental studies show that TraceCRL can significantly improve the performance of trace anomaly detection and offline trace sampling. It also confirms the effectiveness of the trace augmentation strategies and the efficiency of TraceCRL.},
  doi       = {10.1145/3540250.3549146},
  isbn      = {9781450394130},
  keywords  = {Contrastive Learning, Microservice, Graph Neural Network, Deep Learning, Tracing},
  location  = {Singapore, Singapore},
  numpages  = {12},
  url       = {https://doi.org/10.1145/3540250.3549146},
}

@InProceedings{Peng2022a,
  author    = {Peng, Xin},
  booktitle = {Proceedings of the Federated Africa and Middle East Conference on Software Engineering},
  title     = {Large-Scale Trace Analysis for Microservice Anomaly Detection and Root Cause Localization},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {93–94},
  publisher = {Association for Computing Machinery},
  series    = {FAMECSE '22},
  abstract  = {Distributed tracing traces requests as they flow between services. It has been widely accepted and practiced in industry as an important means to achieve observability in microservice architecture for various purposes such as anomaly detection and root cause localization. However, trace analysis in an industrial microservice system is often challenging due to the huge number of traces produced by the system and the difficulties in combining traces with other types of operation data such as logs and metrics. In this talk, I will first analyze the background and describe the industrial practice of distributed tracing and trace analysis. Then I will introduce our explorations on large-scale trace analysis for microservice anomaly detection and root cause localization.},
  doi       = {10.1145/3531056.3542765},
  isbn      = {9781450396639},
  keywords  = {Log, Root Cause Analysis, Observability, Metrics, Anomaly Detection, Microservice Architecture, Trace},
  location  = {Cairo-Kampala, Egypt},
  numpages  = {2},
  url       = {https://doi.org/10.1145/3531056.3542765},
}

@inproceedings{10.1145/3493700.3493731,
author = {Lodha, Ishaan and Kolur, Lakshana and Krishnan, Keerthan and Dheenadayalan, Kumar and Sitaram, Dinkar and Nandi, Siddhartha},
title = {Cost-Optimized Video Transfer Using Real-Time Super Resolution Convolutional Neural Networks},
year = {2022},
isbn = {9781450385824},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3493700.3493731},
doi = {10.1145/3493700.3493731},
abstract = {The explosion of video generation and consumption, coupled with an inadequate rise in network bandwidth has led to network delays and decreased Quality of Experience, limiting the opportunities to tap into the full potential of video data. These deficiencies in network resources with a shift to cloud computing models have resulted in the need to revisit the overall mechanism for video transfer and storage of videos between edge devices and the cloud. We propose a novel multi-scale real-time super-resolution convolutional neural network to achieve the composite task of optimizing the entire cost of video transfer with minimal loss of quality that can be used for any application involving the transfer of video data. To achieve this, we develop a cost-optimized video transfer system that optimizes the metrics of video transfer to give the best quality video output, given the user budget. The model makes use of Convolution blocks for extracting features and output creation with multiple sub-pixel convolutions in a novel structure. For upscaling to full High Definition video at 30 fps, the model successfully retained the frame rate while the system achieved savings in transfer time and bandwidth usage. This model has been trained on surveillance videos (VIRAT dataset), but consistent results were obtained during testing even on feature films and sports videos which demonstrates its content invariance. The evaluation of our approach averaged over 376 videos, yielded meager quality losses of 8%, measured by a novel non-referential quality metric, also proposed in this paper. Additionally, average network bandwidth savings of 80% and average video transfer time reduction of 52% were achieved.},
booktitle = {5th Joint International Conference on Data Science & Management of Data (9th ACM IKDD CODS and 27th COMAD)},
pages = {213–221},
numpages = {9},
keywords = {CNN, deep neural networks, video transfer, cost optimization, GAN, super resolution},
location = {Bangalore, India},
series = {CODS-COMAD 2022}
}

@InProceedings{Straesser2023,
  author    = {Straesser, Martin and Eismann, Simon and von Kistowski, J\'{o}akim and Bauer, Andr\'{e} and Kounev, Samuel},
  booktitle = {Proceedings of the 2023 ACM/SPEC International Conference on Performance Engineering},
  title     = {Autoscaler Evaluation and Configuration: A Practitioner's Guideline},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {31–41},
  publisher = {Association for Computing Machinery},
  series    = {ICPE '23},
  abstract  = {Autoscalers are indispensable parts of modern cloud deployments and determine the service quality and cost of a cloud application in dynamic workloads. The configuration of an autoscaler strongly influences its performance and is also one of the biggest challenges and showstoppers for the practical applicability of many research autoscalers. Many proposed cloud experiment methodologies can only be partially applied in practice, and many autoscaling papers use custom evaluation methods and metrics. This paper presents a practical guideline for obtaining meaningful and interpretable results on autoscaler performance with reasonable overhead. We provide step-by-step instructions for defining realistic usage behaviors and traffic patterns. We divide the analysis of autoscaler performance into a qualitative antipattern-based analysis and a quantitative analysis. To demonstrate the applicability of our guideline, we conduct several experiments with a microservice of our industry partner in a realistic test environment.},
  doi       = {10.1145/3578244.3583721},
  isbn      = {9798400700682},
  keywords  = {guideline, autoscaling, methodology, evaluation, antipatterns},
  location  = {Coimbra, Portugal},
  numpages  = {11},
  url       = {https://doi.org/10.1145/3578244.3583721},
}

@InProceedings{Wang2022a,
  author    = {Wang, Hanzhang and Wu, Zhengkai and Jiang, Huai and Huang, Yichao and Wang, Jiamu and Kopru, Selcuk and Xie, Tao},
  booktitle = {Proceedings of the 36th IEEE/ACM International Conference on Automated Software Engineering},
  title     = {Groot: An Event-Graph-Based Approach for Root Cause Analysis in Industrial Settings},
  year      = {2022},
  pages     = {419–429},
  publisher = {IEEE Press},
  series    = {ASE '21},
  abstract  = {For large-scale distributed systems, it is crucial to efficiently diagnose the root causes of incidents to maintain high system availability. The recent development of microservice architecture brings three major challenges (i.e., complexities of operation, system scale, and monitoring) to root cause analysis (RCA) in industrial settings. To tackle these challenges, in this paper, we present Groot, an event-graph-based approach for RCA. Groot constructs a real-time causality graph based on events that summarize various types of metrics, logs, and activities in the system under analysis. Moreover, to incorporate domain knowledge from site reliability engineering (SRE) engineers, Groot can be customized with user-defined events and domain-specific rules. Currently, Groot supports RCA among 5,000 real production services and is actively used by the SRE teams in eBay, a global e-commerce system serving more than 159 million active buyers per year. Over 15 months, we collect a data set containing labeled root causes of 952 real production incidents for evaluation. The evaluation results show that Groot is able to achieve 95% top-3 accuracy and 78% top-1 accuracy. To share our experience in deploying and adopting RCA in industrial settings, we conduct a survey to show that users of Groot find it helpful and easy to use. We also share the lessons learned from deploying and adopting Groot to solve RCA problems in production environments.},
  doi       = {10.1109/ASE51524.2021.9678708},
  isbn      = {9781665403375},
  keywords  = {root cause analysis, microservices, AIOps, observability},
  location  = {Melbourne, Australia},
  numpages  = {11},
  url       = {https://doi.org/10.1109/ASE51524.2021.9678708},
}

@InProceedings{Straesser2023a,
  author    = {Straesser, Martin and Mathiasch, Jonas and Bauer, Andr\'{e} and Kounev, Samuel},
  booktitle = {Proceedings of the 2023 ACM/SPEC International Conference on Performance Engineering},
  title     = {A Systematic Approach for Benchmarking of Container Orchestration Frameworks},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {187–198},
  publisher = {Association for Computing Machinery},
  series    = {ICPE '23},
  abstract  = {Container orchestration frameworks play a critical role in modern cloud computing paradigms such as cloud-native or serverless computing. They significantly impact the quality and cost of service deployment as they manage many performance-critical tasks such as container provisioning, scheduling, scaling, and networking. Consequently, a comprehensive performance assessment of container orchestration frameworks is essential. However, until now, there is no benchmarking approach that covers the many different tasks implemented in such platforms and supports evaluating different technology stacks. In this paper, we present a systematic approach that enables benchmarking of container orchestrators. Based on a definition of container orchestration, we define the core requirements and benchmarking scope for such platforms. Each requirement is then linked to metrics and measurement methods, and a benchmark architecture is proposed. With COFFEE, we introduce a benchmarking tool supporting the definition of complex test campaigns for container orchestration frameworks. We demonstrate the potential of our approach with case studies of the frameworks Kubernetes and Nomad in a self-hosted environment and on the Google Cloud Platform. The presented case studies focus on container startup times, crash recovery, rolling updates, and more.},
  doi       = {10.1145/3578244.3583726},
  isbn      = {9798400700682},
  keywords  = {nomad, kubernetes, benchmarking, performance, container orchestration},
  location  = {Coimbra, Portugal},
  numpages  = {12},
  url       = {https://doi.org/10.1145/3578244.3583726},
}

@InProceedings{Klinaku2023,
  author    = {Klinaku, Floriment and Speth, Sandro and Zilch, Markus and Becker, Steffen},
  booktitle = {Companion of the 2023 ACM/SPEC International Conference on Performance Engineering},
  title     = {Hitchhiker's Guide for Explainability in Autoscaling},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {277–282},
  publisher = {Association for Computing Machinery},
  series    = {ICPE '23 Companion},
  abstract  = {Cloud-native applications force increasingly powerful and complex autoscalers to guarantee the applications' quality of service. For software engineers with operational tasks understanding the autoscalers' behavior and applying appropriate reconfigurations is challenging due to their internal mechanisms, inherent distribution, and decentralized decision-making. Hence, engineers seek appropriate explanations. However, engineers' expectations on feedback and explanations of autoscalers are unclear. In this paper, through a workshop with a representative sample of engineers responsible for operating an autoscaler, we elicit requirements for explainability in autoscaling. Based on the requirements, we propose an evaluation scheme for evaluating explainability as a non-functional property of the autoscaling process and guide software engineers in choosing the best-fitting autoscaler for their scenario. The evaluation scheme is based on a Goal Question Metric approach and contains three goals, nine questions to assess explainability, and metrics to answer these questions. The evaluation scheme should help engineers choose a suitable and explainable autoscaler or guide them in building their own.},
  doi       = {10.1145/3578245.3584728},
  isbn      = {9798400700729},
  keywords  = {evaluation, elasticity, explainability, requirements, cloud},
  location  = {Coimbra, Portugal},
  numpages  = {6},
  url       = {https://doi.org/10.1145/3578245.3584728},
}

@InProceedings{Volpert2023,
  author    = {Volpert, Simon and Erb, Benjamin and Eisenhart, Georg and Seybold, Daniel and Wesner, Stefan and Domaschka, J\"{o}rg},
  booktitle = {Proceedings of the 2023 ACM/SPEC International Conference on Performance Engineering},
  title     = {A Methodology and Framework to Determine the Isolation Capabilities of Virtualisation Technologies},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {149–160},
  publisher = {Association for Computing Machinery},
  series    = {ICPE '23},
  abstract  = {The capability to isolate system resources is an essential characteristic of virtualisation technologies and is therefore important for research and industry alike. It allows the co-location of experiments and workloads, the partitioning of system resources and enables multi-tenant business models such as cloud computing. Poor isolation among tenants bears the risk of noisy-neighbour and contention effects which negatively impacts all of those use-cases. These effects describe the negative impact of one tenant onto another by utilising shared resources. Both industry and research provide many different concepts and technologies to realise isolation. Yet, the isolation capabilities of all these different approaches are not well understood; nor is there an established way to measure the quality of their isolation capabilities. Such an understanding, however, is of uttermost importance in practice to elaborately decide on a suited implementation. Hence, in this work, we present a novel methodology to measure the isolation capabilities of virtualisation technologies for system resources, that fulfils all requirements to benchmarking including reliability. It relies on an immutable approach, based on Experiment-as-Code. The complete process holistically includes everything from bare metal resource provisioning to the actual experiment enactment.The results determined by this methodology help in the decision for a virtualisation technology regarding its capability to isolate given resources. Such results are presented here as a closing example in order to validate the proposed methodology.},
  doi       = {10.1145/3578244.3583728},
  isbn      = {9798400700682},
  keywords  = {framework, isolation, virtualisation, benchmarking},
  location  = {Coimbra, Portugal},
  numpages  = {12},
  url       = {https://doi.org/10.1145/3578244.3583728},
}

@InProceedings{Petrov2022,
  author    = {Petrov, Valerii and Gennadinik, Anna and Avksentieva, Elena},
  booktitle = {Proceedings of the 2022 8th International Conference on Computer Technology Applications},
  title     = {Metrics for Machine Learning Evaluation Methods in Cloud Monitoring Systems},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {168–175},
  publisher = {Association for Computing Machinery},
  series    = {ICCTA '22},
  abstract  = {During the machine learning pipeline development, engineers need to validate the efficiency of the machine learning methods in order to assess the quality of the made forecast.Due to the wide deployment and implementation of the machine learning models and methods across monitoring systems, the actual scientific problem is the assessment of these methods in the monitoring systems. This research has concluded that the current standard metrics are not sufficient to get the accurate assessment for the used machine learning methods.This research has provided the new complex rating for anomaly detection regarding the use-cases of cloud monitoring systems. The main difference from the standard metrics is that the new approach includes better integration to the business processes, demanding resources, and a critical glance to the false-positive alerts. The new approach might be used in the model assessment in monitoring systems with the similar requirements:Cost-effective use of computing resourcesLow amount of false-positivesFast detection of anomaliesFurthermore, the current research proposes new methods of computation capacity planning for different anomaly detection methods. These methods are not even limited to anomaly detection and could be used as a basis for developing capacity planning for other machine learning techniques and approaches.· Applied computing∼Operations research∼Forecasting · Computer systems organization∼Architectures∼Distributed architectures ∼Cloud computing∼Forecasting · Computing methodologies∼Machine learning},
  doi       = {10.1145/3543712.3543715},
  isbn      = {9781450396226},
  keywords  = {machine learning metrics, capacity planning, monitoring, quality assessment},
  location  = {Vienna, Austria},
  numpages  = {8},
  url       = {https://doi.org/10.1145/3543712.3543715},
}

@InProceedings{Pulnil2022,
  author    = {Pulnil, Sermsook and Senivongse, Twittie},
  booktitle = {2022 19th International Joint Conference on Computer Science and Software Engineering (JCSSE)},
  title     = {A Microservices Quality Model Based on Microservices Anti-patterns},
  year      = {2022},
  pages     = {1-6},
  doi       = {10.1109/JCSSE54890.2022.9836297},
}

@InProceedings{Zaragoza2022a,
  author    = {Zaragoza, Pascal and Seriai, Abdelhak-Djamel and Seriai, Abderrahmane and Shatnawi, Anas and Derras, Mustapha},
  booktitle = {2022 IEEE 19th International Conference on Software Architecture (ICSA)},
  title     = {Leveraging the Layered Architecture for Microservice Recovery},
  year      = {2022},
  pages     = {135-145},
  doi       = {10.1109/ICSA53651.2022.00021},
}

@InProceedings{Basciftci2022,
  author    = {Basciftci, Fatih and Aydemir, Fikri},
  booktitle = {2022 IEEE 20th Jubilee International Symposium on Intelligent Systems and Informatics (SISY)},
  title     = {Strategies for Request-Response Logging in Microservices Architecture},
  year      = {2022},
  pages     = {000121-000126},
  doi       = {10.1109/SISY56759.2022.10036308},
}

@InProceedings{Yang2022,
  author    = {Yang, Xikang and Wang, Juan and Zhou, Biyu and Wang, Wang and Liu, Wantao and Dong, Yangchen},
  booktitle = {2022 IEEE 24th Int Conf on High Performance Computing & Communications; 8th Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int Conf on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys)},
  title     = {Fine-grained Spatiotemporal Features-Based for Anomaly Detection in Microservice Systems},
  year      = {2022},
  pages     = {847-856},
  doi       = {10.1109/HPCC-DSS-SmartCity-DependSys57074.2022.00138},
}

@Article{Rossi2023,
  author  = {Rossi, Fabiana and Cardellini, Valeria and Presti, Francesco Lo and Nardelli, Matteo},
  journal = {IEEE Transactions on Cloud Computing},
  title   = {Dynamic Multi-Metric Thresholds for Scaling Applications Using Reinforcement Learning},
  year    = {2023},
  number  = {2},
  pages   = {1807-1821},
  volume  = {11},
  doi     = {10.1109/TCC.2022.3163357},
  file    = {:Rossi2023 - Dynamic Multi Metric Thresholds for Scaling Applications Using Reinforcement Learning.pdf:PDF},
}

@InProceedings{Schindewolf2022,
  author    = {Schindewolf, Marc and Grimm, Daniel and Lingor, Christian and Sax, Eric},
  booktitle = {2022 IEEE 1st International Conference on Cognitive Mobility (CogMob)},
  title     = {Toward a Resilient Automotive Service-Oriented Architecture by using Dynamic Orchestration},
  year      = {2022},
  pages     = {000147-000154},
  doi       = {10.1109/CogMob55547.2022.10118016},
}

@InProceedings{Chen2022,
  author    = {Chen, Yufu and Yan, Meng and Yang, Dan and Zhang, Xiaohong and Wang, Ziliang},
  booktitle = {2022 IEEE International Conference on Web Services (ICWS)},
  title     = {Deep Attentive Anomaly Detection for Microservice Systems with Multimodal Time-Series Data},
  year      = {2022},
  pages     = {373-378},
  doi       = {10.1109/ICWS55610.2022.00062},
}

@InProceedings{Li2022a,
  author    = {Li, Shuo and Baştuğ, Ejder and Di Renzo, Marco},
  booktitle = {2022 IEEE International Mediterranean Conference on Communications and Networking (MeditCom)},
  title     = {On the Modelling and Analysis of Edge-Serverless Computing},
  year      = {2022},
  pages     = {250-254},
  doi       = {10.1109/MeditCom55741.2022.9928755},
}

@InProceedings{Wen2022,
  author    = {Wen, Shilin and Deng, Hongjie and Qiu, Ke and Han, Rui},
  booktitle = {2022 IEEE International Conference on Sensing, Diagnostics, Prognostics, and Control ( SDPC)},
  title     = {EdgeCloudBenchmark: A Benchmark Driven by Real Trace to Generate Cloud-Edge Workloads},
  year      = {2022},
  pages     = {377-382},
  doi       = {10.1109/SDPC55702.2022.9915888},
}

@Article{BalcaoFilho2023,
  author  = {Balcão-Filho, Amandio and Ruiz, Natasha and Rosa, Ferrucio de Franco and Bonacin, Rodrigo and Jino, Mario},
  journal = {IEEE Transactions on Services Computing},
  title   = {Applying a Consumer-Centric Framework for Trust Assessment of Cloud Computing Service Providers},
  year    = {2023},
  number  = {1},
  pages   = {95-107},
  volume  = {16},
  doi     = {10.1109/TSC.2021.3134125},
  file    = {:BalcaoFilho2023 - Applying a Consumer Centric Framework for Trust Assessment of Cloud Computing Service Providers.pdf:PDF},
}

@InProceedings{Kong2022,
  author    = {Kong, Xiangyu and Gao, Xuesong and Pan, Shibao and Zhou, Yizhi and Yang, Yanan and Zhao, Laiping and Qi, Heng},
  booktitle = {2022 IEEE Intl Conf on Parallel & Distributed Processing with Applications, Big Data & Cloud Computing, Sustainable Computing & Communications, Social Computing & Networking (ISPA/BDCloud/SocialCom/SustainCom)},
  title     = {TailCmp - A Tail Latency Evaluation Solution of Public Cloud and Labeled von Neumann Architecture based Cloud Prototype},
  year      = {2022},
  pages     = {888-895},
  doi       = {10.1109/ISPA-BDCloud-SocialCom-SustainCom57177.2022.00118},
}

@Article{Farshidi2023,
  author    = {Siamak Farshidi and Izaak Beer Kwantes and Slinger Jansen},
  journal   = {Software and Systems Modeling},
  title     = {Business process modeling language selection for research modelers},
  year      = {2023},
  month     = {may},
  doi       = {10.1007/s10270-023-01110-8},
  file      = {:Farshidi2023 - Business Process Modeling Language Selection for Research Modelers.pdf:PDF},
  publisher = {Springer Science and Business Media {LLC}},
}

@Article{Soares2023,
  author    = {Rodrigo C. Soares and Rafael Capilla and Vinicius dos Santos and Elisa Yumi Nakagawa},
  journal   = {Computing},
  title     = {Trends in continuous evaluation of software architectures},
  year      = {2023},
  month     = {feb},
  doi       = {10.1007/s00607-023-01161-1},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs00607-023-01161-1},
}

@Article{Zhao2023,
  author    = {Shajunyi Zhao and Jianchun Miao and Jingfeng Zhao and Nader Naghshbandi},
  journal   = {Information Systems and e-Business Management},
  title     = {A comprehensive and systematic review of the banking systems based on pay-as-you-go payment fashion and cloud computing in the pandemic era},
  year      = {2023},
  month     = {jan},
  doi       = {10.1007/s10257-022-00617-9},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs10257-022-00617-9},
}

@InCollection{Gudenkauf2023,
  author    = {Stefan Gudenkauf and Uwe Bachmann and Niklas Hartmann},
  booktitle = {Lecture Notes in Business Information Processing},
  publisher = {Springer International Publishing},
  title     = {A Concept and a Multitenant Web Application for Interactive Software Architecture Analysis},
  year      = {2023},
  pages     = {268--283},
  doi       = {10.1007/978-3-031-26886-1_16},
  url       = {https://doi.org/10.1007%2F978-3-031-26886-1_16},
}

@InCollection{Li2023,
  author    = {Qing Li and Zhixiong Fang and Bohang Liang},
  booktitle = {Innovative Intelligent Industrial Production and Logistics},
  publisher = {Springer Nature Switzerland},
  title     = {General Architecture Framework and General Modelling Framework: Interoperability of Enterprise Architecture},
  year      = {2023},
  pages     = {135--158},
  doi       = {10.1007/978-3-031-37228-5_9},
  url       = {https://doi.org/10.1007%2F978-3-031-37228-5_9},
}

@Article{Rwemalika2022,
  author    = {Renaud Rwemalika and Sarra Habchi and Mike Papadakis and Yves Le Traon and Marie-Claude Brasseur},
  journal   = {Empirical Software Engineering},
  title     = {Smells in system user interactive tests},
  year      = {2022},
  month     = {dec},
  number    = {1},
  volume    = {28},
  doi       = {10.1007/s10664-022-10251-1},
  file      = {:Rwemalika_2022 - Smells in System User Interactive Tests.pdf:PDF},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs10664-022-10251-1},
}

@Article{Mehmood2022,
  author    = {Erum Mehmood and Tayyaba Anees},
  journal   = {Knowledge and Information Systems},
  title     = {Distributed real-time {ETL} architecture for unstructured big data},
  year      = {2022},
  month     = {sep},
  number    = {12},
  pages     = {3419--3445},
  volume    = {64},
  doi       = {10.1007/s10115-022-01757-7},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs10115-022-01757-7},
}

@Article{Zeng2022,
  author    = {Rong Zeng and Xiaofeng Hou and Lu Zhang and Chao Li and Wenli Zheng and Minyi Guo},
  journal   = {Frontiers of Computer Science},
  title     = {Performance optimization for cloud computing systems in the microservice era: state-of-the-art and research opportunities},
  year      = {2022},
  month     = {jan},
  number    = {6},
  volume    = {16},
  doi       = {10.1007/s11704-020-0072-3},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs11704-020-0072-3},
}

@InCollection{Kresse2022,
  author    = {Wolfgang Kresse and David Danko and Kian Fadaie},
  booktitle = {Springer Handbook of Geographic Information},
  publisher = {Springer International Publishing},
  title     = {Standardization},
  year      = {2022},
  pages     = {383--492},
  doi       = {10.1007/978-3-030-53125-6_15},
  file      = {:Kresse_2022 - Standardization.pdf:PDF},
  url       = {https://doi.org/10.1007%2F978-3-030-53125-6_15},
}

@InCollection{Ziemann2022,
  author    = {Jörg Ziemann},
  booktitle = {The Enterprise Engineering Series},
  publisher = {Springer International Publishing},
  title     = {{EAM} Implementation},
  year      = {2022},
  pages     = {109--167},
  doi       = {10.1007/978-3-030-96734-5_4},
  url       = {https://doi.org/10.1007%2F978-3-030-96734-5_4},
}

@Article{Bombini2023,
  author    = {Alessandro Bombini and Fernando Garc{\'{\i}}a-Avello Bof{\'{\i}}as and Chiara Ruberto and Francesco Taccetti},
  journal   = {Rendiconti Lincei. Scienze Fisiche e Naturali},
  title     = {A cloud-native application for digital restoration of Cultural Heritage using nuclear imaging: {THESPIAN}-{XRF}},
  year      = {2023},
  month     = {jul},
  doi       = {10.1007/s12210-023-01174-0},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs12210-023-01174-0},
}

@Article{Bhimji2023,
  author    = {W. Bhimji and D. Carder and E. Dart and J. Duarte and I. Fisk and R. Gardner and C. Guok and B. Jayatilaka and T. Lehman and M. Lin and C. Maltzahn and S. McKee and M. S. Neubauer and O. Rind and O. Shadura and N. V. Tran and P. van Gemmeren and G. Watts and B. A. Weaver and F. Würthwein},
  journal   = {Computing and Software for Big Science},
  title     = {Snowmass 2021 Computational Frontier {CompF}4 Topical Group Report Storage and Processing Resource Access},
  year      = {2023},
  month     = {apr},
  number    = {1},
  volume    = {7},
  doi       = {10.1007/s41781-023-00097-7},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs41781-023-00097-7},
}

@Article{Soldani2023,
  author    = {Jacopo Soldani and Javad Khalili and Antonio Brogi},
  journal   = {{SN} Computer Science},
  title     = {Offline Mining of Microservice-Based Architectures (Extended Version)},
  year      = {2023},
  month     = {apr},
  number    = {3},
  volume    = {4},
  doi       = {10.1007/s42979-023-01721-4},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs42979-023-01721-4},
}

@Article{Metsch2023,
  author    = {Thijs Metsch and Magdalena Viktorsson and Adrian Hoban and Monica Vitali and Ravi Iyer and Erik Elmroth},
  journal   = {{SN} Computer Science},
  title     = {Intent-Driven Orchestration: Enforcing Service Level Objectives for Cloud Native Deployments},
  year      = {2023},
  month     = {mar},
  number    = {3},
  volume    = {4},
  doi       = {10.1007/s42979-023-01698-0},
  file      = {:Metsch_2023 - Intent Driven Orchestration_ Enforcing Service Level Objectives for Cloud Native Deployments.pdf:PDF},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs42979-023-01698-0},
}

@Article{Adewojo2023,
  author    = {Adekunbi A. Adewojo and Julian M. Bass},
  journal   = {{SN} Computer Science},
  title     = {A Novel Weight-Assignment Load Balancing Algorithm for Cloud Applications},
  year      = {2023},
  month     = {mar},
  number    = {3},
  volume    = {4},
  doi       = {10.1007/s42979-023-01702-7},
  file      = {:Adewojo_2023 - A Novel Weight Assignment Load Balancing Algorithm for Cloud Applications.pdf:PDF},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs42979-023-01702-7},
}

@Article{Erdei2023,
  author    = {Roland Erdei and Laszlo Toka},
  journal   = {Journal of Network and Systems Management},
  title     = {Minimizing Resource Allocation for Cloud-Native Microservices},
  year      = {2023},
  month     = {feb},
  number    = {2},
  volume    = {31},
  doi       = {10.1007/s10922-023-09726-3},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs10922-023-09726-3},
}

@InCollection{Huang2023,
  author    = {Xiaoli Huang and Andi Liu and Yizhong Liu and Li Li and Zhenglin Lv and Fan Wang},
  booktitle = {Lecture Notes in Computer Science},
  publisher = {Springer Nature Switzerland},
  title     = {Construction Practice of~Cloud Billing Message Based on~Stream Native},
  year      = {2023},
  pages     = {414--427},
  doi       = {10.1007/978-3-031-28124-2_40},
  url       = {https://doi.org/10.1007%2F978-3-031-28124-2_40},
}

@InCollection{Frank2023,
  author    = {Roland Frank and Gregor Schumacher and Andreas Tamm},
  booktitle = {Cloud Transformation},
  publisher = {Springer Fachmedien Wiesbaden},
  title     = {Mastering Software as a Core Competence},
  year      = {2023},
  pages     = {133--168},
  doi       = {10.1007/978-3-658-38823-2_6},
  url       = {https://doi.org/10.1007%2F978-3-658-38823-2_6},
}

@InCollection{Mohamed2023,
  author    = {Amany Magdy Mohamed and Ashraf Darwish and Aboul Ella Hassanien},
  booktitle = {Studies in Big Data},
  publisher = {Springer Nature Switzerland},
  title     = {Cost Effective Decision Support System for Smart Water Management System},
  year      = {2023},
  pages     = {207--220},
  doi       = {10.1007/978-3-031-22456-0_12},
  file      = {:Mohamed_2023 - Cost Effective Decision Support System for Smart Water Management System.pdf:PDF},
  url       = {https://doi.org/10.1007%2F978-3-031-22456-0_12},
}

@InCollection{Dubey2023,
  author    = {Parul Dubey and Arvind Kumar Tiwari},
  booktitle = {Advanced Technologies and Societal Change},
  publisher = {Springer Nature Singapore},
  title     = {Solution Architecting on~Remote Medical Monitoring with {AWS} Cloud and {IoT}},
  year      = {2023},
  pages     = {189--202},
  doi       = {10.1007/978-981-99-0377-1_12},
  url       = {https://doi.org/10.1007%2F978-981-99-0377-1_12},
}

@InCollection{Bonomi2023,
  author    = {Flavio Bonomi and Adam T. Drobot},
  booktitle = {The Digital Twin},
  publisher = {Springer International Publishing},
  title     = {Infrastructure for Digital Twins: Data, Communications, Computing, and Storage},
  year      = {2023},
  pages     = {395--431},
  doi       = {10.1007/978-3-031-21343-4_15},
  url       = {https://doi.org/10.1007%2F978-3-031-21343-4_15},
}

@InCollection{HuaweiTechnologiesCo.2022,
  author    = {Huawei Technologies Co., Ltd.},
  booktitle = {Cloud Computing Technology},
  publisher = {Springer Nature Singapore},
  title     = {Cloud Computing Development Trends},
  year      = {2022},
  month     = {oct},
  pages     = {343--374},
  doi       = {10.1007/978-981-19-3026-3_8},
  file      = {:2022 - Cloud Computing Development Trends.pdf:PDF},
  url       = {https://doi.org/10.1007%2F978-981-19-3026-3_8},
}

@Article{Carrion2022,
  author    = {Carmen Carri{\'{o}}n},
  journal   = {Journal of Grid Computing},
  title     = {Kubernetes as a Standard Container Orchestrator - A Bibliometric Analysis},
  year      = {2022},
  month     = {dec},
  number    = {4},
  volume    = {20},
  doi       = {10.1007/s10723-022-09629-8},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs10723-022-09629-8},
}

@Article{Henning2022,
  author    = {Sören Henning and Wilhelm Hasselbring},
  journal   = {Empirical Software Engineering},
  title     = {A configurable method for benchmarking scalability of cloud-native applications},
  year      = {2022},
  month     = {aug},
  number    = {6},
  volume    = {27},
  doi       = {10.1007/s10664-022-10162-1},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs10664-022-10162-1},
}

@Article{Mechouche2022,
  author    = {Jeremy Mechouche and Roua Touihri and Mohamed Sellami and Walid Gaaloul},
  journal   = {The Journal of Supercomputing},
  title     = {Conformance checking for autonomous multi-cloud {SLA} management and adaptation},
  year      = {2022},
  month     = {mar},
  number    = {11},
  pages     = {13004--13039},
  volume    = {78},
  doi       = {10.1007/s11227-022-04363-0},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs11227-022-04363-0},
}

@Article{Muslim2022,
  author    = {Hafiz Syed Muhammad Muslim and Saddaf Rubab and Malik M. Khan and Naima Iltaf and Ali Kashif Bashir and Kashif Javed},
  journal   = {Knowledge and Information Systems},
  title     = {S-{RAP}: relevance-aware {QoS} prediction in web-services and user contexts},
  year      = {2022},
  month     = {jun},
  number    = {7},
  pages     = {1997--2022},
  volume    = {64},
  doi       = {10.1007/s10115-022-01699-0},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1007%2Fs10115-022-01699-0},
}

@InCollection{Lichtenthaeler2022,
  author    = {Robin Lichtenthäler and Guido Wirtz},
  booktitle = {Service-Oriented and Cloud Computing},
  publisher = {Springer International Publishing},
  title     = {Towards a~Quality Model for~Cloud-native Applications},
  year      = {2022},
  pages     = {109--117},
  doi       = {10.1007/978-3-031-04718-3_7},
  url       = {https://doi.org/10.1007%2F978-3-031-04718-3_7},
}

@InCollection{Vitali2022,
  author    = {Monica Vitali},
  booktitle = {Advanced Information Systems Engineering},
  publisher = {Springer International Publishing},
  title     = {Towards Greener Applications: Enabling Sustainable-aware Cloud Native Applications Design},
  year      = {2022},
  pages     = {93--108},
  doi       = {10.1007/978-3-031-07472-1_6},
  file      = {:Vitali_2022 - Towards Greener Applications_ Enabling Sustainable Aware Cloud Native Applications Design.pdf:PDF},
  url       = {https://doi.org/10.1007%2F978-3-031-07472-1_6},
}

@InCollection{Gruenewald2022,
  author    = {Elias Grünewald},
  booktitle = {Privacy and Identity Management. Between Data Protection and Security},
  publisher = {Springer International Publishing},
  title     = {Cloud Native Privacy Engineering through {DevPrivOps}},
  year      = {2022},
  pages     = {122--141},
  doi       = {10.1007/978-3-030-99100-5_10},
  url       = {https://doi.org/10.1007%2F978-3-030-99100-5_10},
}

@InCollection{Zhang2022,
  author    = {Yifan Zhang and Shuli Zhang and Chengyun Guo and Luogang Zhang and Yinggang Sun and Hai Huang},
  booktitle = {Advances in Artificial Intelligence and Security},
  publisher = {Springer International Publishing},
  title     = {Optimization Design of Privacy Protection System Based on Cloud Native},
  year      = {2022},
  pages     = {599--615},
  doi       = {10.1007/978-3-031-06761-7_48},
  url       = {https://doi.org/10.1007%2F978-3-031-06761-7_48},
}

@InCollection{Bhatia2022,
  author    = {Mohan Bhatia},
  booktitle = {Banking 4.0},
  publisher = {Springer Nature Singapore},
  title     = {Cloud Adoption: A Foundational Engine},
  year      = {2022},
  pages     = {129--146},
  doi       = {10.1007/978-981-16-6069-6_6},
  url       = {https://doi.org/10.1007%2F978-981-16-6069-6_6},
}

@InCollection{FornesLeal2022,
  author    = {Alejandro Forn{\'{e}}s-Leal and Ignacio Lacalle and Rafael Va{\~{n}}o and Carlos E. Palau and Fernando Boronat and Maria Ganzha and Marcin Paprzycki},
  booktitle = {Lecture Notes in Electrical Engineering},
  publisher = {Springer Nature Singapore},
  title     = {Evolution of {MANO} Towards the Cloud-Native Paradigm for the Edge Computing},
  year      = {2022},
  pages     = {1--16},
  doi       = {10.1007/978-981-19-2980-9_1},
  url       = {https://doi.org/10.1007%2F978-981-19-2980-9_1},
}

@InCollection{Ziemann2022a,
  author    = {Jörg Ziemann},
  booktitle = {The Enterprise Engineering Series},
  publisher = {Springer International Publishing},
  title     = {{EAM} Evaluation},
  year      = {2022},
  pages     = {169--204},
  doi       = {10.1007/978-3-030-96734-5_5},
  url       = {https://doi.org/10.1007%2F978-3-030-96734-5_5},
}

@InCollection{Horn2022,
  author    = {Angelina Horn and Hamid Mohammadi Fard and Felix Wolf},
  booktitle = {Euro-Par 2022: Parallel Processing},
  publisher = {Springer International Publishing},
  title     = {Multi-objective Hybrid Autoscaling of~Microservices in~Kubernetes Clusters},
  year      = {2022},
  pages     = {233--250},
  doi       = {10.1007/978-3-031-12597-3_15},
  url       = {https://doi.org/10.1007%2F978-3-031-12597-3_15},
}

@InCollection{Bhatia2022a,
  author    = {Mohan Bhatia},
  booktitle = {Banking 4.0},
  publisher = {Springer Nature Singapore},
  title     = {Deliver Digital Experience},
  year      = {2022},
  pages     = {91--128},
  doi       = {10.1007/978-981-16-6069-6_5},
  url       = {https://doi.org/10.1007%2F978-981-16-6069-6_5},
}

@InCollection{Liu2022,
  author    = {Fengrui Liu and Yang Wang and Zhenyu Li and Rui Ren and Hongtao Guan and Xian Yu and Xiaofan Chen and Gaogang Xie},
  booktitle = {Case-Based Reasoning Research and Development},
  publisher = {Springer International Publishing},
  title     = {{MicroCBR}: Case-Based Reasoning on~Spatio-temporal Fault Knowledge Graph for~Microservices Troubleshooting},
  year      = {2022},
  pages     = {224--239},
  doi       = {10.1007/978-3-031-14923-8_15},
  url       = {https://doi.org/10.1007%2F978-3-031-14923-8_15},
}

@InCollection{Hajlaoui2022,
  author    = {Jaleleddine Hajlaoui and Zied Trifa and Zaki Brahmi},
  booktitle = {Computational Science and Its Applications {\textendash} {ICCSA} 2022},
  publisher = {Springer International Publishing},
  title     = {Model Based Migration of Cloud Systems: Review and Roadmap},
  year      = {2022},
  pages     = {249--264},
  doi       = {10.1007/978-3-031-10522-7_18},
  url       = {https://doi.org/10.1007%2F978-3-031-10522-7_18},
}

@InCollection{Mariouli2022,
  author    = {Majda El Mariouli and Jalal Laassiri},
  booktitle = {Distributed Sensing and Intelligent Systems},
  publisher = {Springer International Publishing},
  title     = {Migration Strategies and Refactoring Methodology When Moving a Legacy {ERP} System to Cloud Platform},
  year      = {2022},
  pages     = {207--217},
  doi       = {10.1007/978-3-030-64258-7_19},
  file      = {:El_Mariouli_2022 - Migration Strategies and Refactoring Methodology When Moving a Legacy ERP System to Cloud Platform.pdf:PDF},
  url       = {https://doi.org/10.1007%2F978-3-030-64258-7_19},
}

@InCollection{Holfelder2022,
  author    = {Wieland Holfelder and Andreas Mayer and Thomas Baumgart},
  booktitle = {Designing Data Spaces},
  publisher = {Springer International Publishing},
  title     = {Sovereign Cloud Technologies for Scalable Data Spaces},
  year      = {2022},
  pages     = {419--436},
  doi       = {10.1007/978-3-030-93975-5_25},
  file      = {:Holfelder_2022 - Sovereign Cloud Technologies for Scalable Data Spaces.pdf:PDF},
  url       = {https://doi.org/10.1007%2F978-3-030-93975-5_25},
}

@InCollection{Maamouri2022,
  author    = {Amine Maamouri and Lilia Sfaxi and Riadh Robbana},
  booktitle = {Information Systems},
  publisher = {Springer International Publishing},
  title     = {Phi: A Generic Microservices-Based Big Data Architecture},
  year      = {2022},
  pages     = {3--16},
  doi       = {10.1007/978-3-030-95947-0_1},
  url       = {https://doi.org/10.1007%2F978-3-030-95947-0_1},
}

@InCollection{Bhatia2022b,
  author    = {Mohan Bhatia},
  booktitle = {Banking 4.0},
  publisher = {Springer Nature Singapore},
  title     = {Tactical Approach to the Industrialisation},
  year      = {2022},
  pages     = {19--39},
  doi       = {10.1007/978-981-16-6069-6_2},
  url       = {https://doi.org/10.1007%2F978-981-16-6069-6_2},
}

@InCollection{SerranoGutierrez2023,
  author    = {Pablo Serrano-Gutierrez and Inmaculada Ayala and Lidia Fuentes},
  booktitle = {Service-Oriented Computing {\textendash} {ICSOC} 2022 Workshops},
  publisher = {Springer Nature Switzerland},
  title     = {{FUSPAQ}: A Function Selection Platform to Adjust {QoS} in a {FaaS} Application},
  year      = {2023},
  pages     = {249--260},
  doi       = {10.1007/978-3-031-26507-5_20},
}

@InCollection{Beltran2023,
  author    = {Daniela Beltran and Mariela Curiel},
  booktitle = {Communications in Computer and Information Science},
  publisher = {Springer Nature Switzerland},
  title     = {Comparison of Deployment Options for Microservices in the Cloud},
  year      = {2023},
  pages     = {44--57},
  doi       = {10.1007/978-3-031-36357-3_4},
  file      = {:Beltran2023 - Comparison of Deployment Options for Microservices in the Cloud.pdf:PDF},
}

@InCollection{BermonAngarita2023,
  author    = {Leonardo Bermon-Angarita and N{\'{e}}stor Dar{\'{\i}}o Duque-M{\'{e}}ndez and Claudia Patricia R{\'{\i}}os-Ruiz},
  booktitle = {Communications in Computer and Information Science},
  publisher = {Springer Nature Switzerland},
  title     = {Expert System for Software Architecture Selection},
  year      = {2023},
  pages     = {73--86},
  doi       = {10.1007/978-3-031-36357-3_6},
}

@InCollection{Zaragoza2022,
  author    = {Pascal Zaragoza and Abdelhak-Djamel Seriai and Abderrahmane Seriai and Anas Shatnawi and Hinde-Lilia Bouziane and Mustapha Derras},
  booktitle = {Communications in Computer and Information Science},
  publisher = {Springer International Publishing},
  title     = {Materializing Microservice-oriented Architecture from~Monolithic Object-oriented Source Code},
  year      = {2022},
  pages     = {143--168},
  doi       = {10.1007/978-3-031-11513-4_7},
}

@InCollection{McAleese2022,
  author    = {Stephen McAleese and Jordan Conway McLaughlin and Filip Detyna and Andrey Murashev and Murat Yilmaz and Paul M. Clarke},
  booktitle = {Communications in Computer and Information Science},
  publisher = {Springer International Publishing},
  title     = {Serverless Software Engineering {\textendash} and How to Get There.},
  year      = {2022},
  pages     = {75--90},
  doi       = {10.1007/978-3-031-15559-8_6},
  file      = {:McAleese2022 - Serverless Software Engineering _ and How to Get There..pdf:PDF},
}

@InCollection{Ghazouani2022,
  author    = {Souad Ghazouani and Anis Tissaoui and Richard Chbeir},
  booktitle = {Web Services {\textendash} {ICWS} 2021},
  publisher = {Springer International Publishing},
  title     = {Cloud-{WSDL}: Making {WSDL} Suitable for Cloud Computing},
  year      = {2022},
  pages     = {1--14},
  doi       = {10.1007/978-3-030-96140-4_1},
}

@InCollection{Yussupov2022,
  author    = {Vladimir Yussupov and Uwe Breitenbücher and Antonio Brogi and Lukas Harzenetter and Frank Leymann and Jacopo Soldani},
  booktitle = {Service-Oriented Computing},
  publisher = {Springer International Publishing},
  title     = {Serverless or~Serverful? A~Pattern-Based Approach for~Exploring Hosting Alternatives},
  year      = {2022},
  pages     = {45--67},
  doi       = {10.1007/978-3-031-18304-1_3},
}

@InCollection{Kumara2022,
  author    = {Indika Kumara and Alfio Lazzaro and Nina Mujkanovic and Zoe Vasileiou and Damian A. Tamburri},
  booktitle = {Deployment and Operation of Complex Software in Heterogeneous Execution Environments},
  publisher = {Springer International Publishing},
  title     = {Quality Assurance and Design-Time Optimization},
  year      = {2022},
  pages     = {53--66},
  doi       = {10.1007/978-3-031-04961-3_4},
}

@InProceedings{Kalinagac2023,
  author    = {Kalinagac, Onur and Soussi, Wissem and G\"{u}r, G\"{u}rkan},
  booktitle = {Proceedings of the 18th International Conference on Network and Service Management},
  title     = {Graph Based Liability Analysis for the Microservice Architecture},
  year      = {2023},
  address   = {Laxenburg, AUT},
  publisher = {International Federation for Information Processing},
  series    = {CNSM '22},
  abstract  = {In this work, we present Graph Based Liability Analysis Framework (GRALAF) for root cause analysis (RCA) of the microservices. In this Proof-of-Concept (PoC) tool, we keep track of the performance metrics of microservices, such as service response time and CPU level values, to detect anomalies. By injecting faults in the services, we construct a Causal Bayesian Network (CBN) which represents the relation between service faults and metrics. The constructed CBN is used to predict the fault probability of services under given metrics which are assigned discrete values according to their anomaly states.},
  articleno = {51},
  isbn      = {9783903176515},
  keywords  = {causal bayesian network, microservices, root cause analysis},
  location  = {Thessaloniki, Greece},
  numpages  = {3},
}

@InProceedings{Savitha2023,
  author    = {S, Savitha and C, Sangana and K, Devendran and L, Pravin and M, Rajkumar and C, Nirmal},
  booktitle = {2023 7th International Conference on Computing Methodologies and Communication (ICCMC)},
  title     = {Auto Scaling Infrastructure with Monitoring Tools using Linux Server on Cloud},
  year      = {2023},
  pages     = {45-52},
  doi       = {10.1109/ICCMC56507.2023.10083635},
}

@InProceedings{Vale2022,
  author    = {Vale, Guilherme and Correia, Filipe Figueiredo and Guerra, Eduardo Martins and de Oliveira Rosa, Thatiane and Fritzsch, Jonas and Bogner, Justus},
  booktitle = {2022 IEEE 19th International Conference on Software Architecture (ICSA)},
  title     = {Designing Microservice Systems Using Patterns: An Empirical Study on Quality Trade-Offs},
  year      = {2022},
  pages     = {69-79},
  doi       = {10.1109/ICSA53651.2022.00015},
}

@Article{Alonso2023,
  author    = {Juncal Alonso and Leire Orue-Echevarria and Valentina Casola and Ana Isabel Torre and Maider Huarte and Eneko Osaba and Jesus L. Lobo},
  journal   = {Journal of Cloud Computing},
  title     = {Understanding the challenges and novel architectural models of multi-cloud native applications {\textendash} a systematic literature review},
  year      = {2023},
  month     = {jan},
  number    = {1},
  volume    = {12},
  doi       = {10.1186/s13677-022-00367-6},
  publisher = {Springer Science and Business Media {LLC}},
  url       = {https://doi.org/10.1186%2Fs13677-022-00367-6},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: fileDirectory-robin-robin-x1-carbon10:../../pdfs;}

@Comment{jabref-meta: saveActions:disabled;
all-text-fields[identity]
date[normalize_date]
month[normalize_month]
pages[normalize_page_numbers]
;}
