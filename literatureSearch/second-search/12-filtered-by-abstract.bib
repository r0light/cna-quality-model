@InCollection{Mubarkoot2021,
  author    = {Mohammed Mubarkoot and Jörn Altmann},
  booktitle = {Economics of Grids, Clouds, Systems, and Services},
  publisher = {Springer International Publishing},
  title     = {Towards Software Compliance Specification and Enforcement Using {TOSCA}},
  year      = {2021},
  pages     = {168--177},
  doi       = {10.1007/978-3-030-92916-9_14},
  file      = {:Mubarkoot2021 - Towards Software Compliance Specification and Enforcement Using TOSCA.pdf:PDF},
}

@InProceedings{Morais2021,
  author    = {Morais, Gabriel and Bork, Dominik and Adda, Mehdi},
  booktitle = {Proceedings of the 13th International Conference on Management of Digital EcoSystems},
  title     = {Towards an Ontology-Driven Approach to Model and Analyze Microservices Architectures},
  year      = {2021},
  address   = {New York, NY, USA},
  pages     = {79–86},
  publisher = {Association for Computing Machinery},
  series    = {MEDES '21},
  abstract  = {Microservices Architectures (MSAs) are continuously replacing monolithic systems toward achieving more flexible and maintainable service-oriented software systems. However, the shift toward an MSA also requires a technological and managerial shift for its adopters. Architecting and managing MSAs represent unique challenges, including microservices' identification, interoperability, and reuse. To handle these challenges, we propose an Ontology-driven Conceptual Modelling approach, based on the Ontology of Microservices Architecture Concepts (OMSAC), for modelling and analyzing microservices-based systems. We show, how OMSAC-based conceptual models, stocked in a Stardog triple store, support Stakeholder-specific communication, documentation, and reuse. This paper reports on the application of our approach in three open-source MSA systems with a focus on microservices' discovery based on similarity metrics. Eventually, we compare the extracted similarity metrics derived from the application of machine learning techniques to the OMSAC models with a manual analysis performed by experts.},
  doi       = {10.1145/3444757.3485108},
  file      = {:Morais2021 - Towards an Ontology Driven Approach to Model and Analyze Microservices Architectures.pdf:PDF},
  isbn      = {9781450383141},
  keywords  = {Microservices, Stardog, ontology, OMSAC, machine learning},
  location  = {Virtual Event, Tunisia},
  numpages  = {8},
}

@InProceedings{Jiang2023,
  author    = {Jiang, Xinrui and Pan, Yicheng and Ma, Meng and Wang, Ping},
  booktitle = {Proceedings of the ACM Web Conference 2023},
  title     = {Look Deep into the Microservice System Anomaly through Very Sparse Logs},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {2970–2978},
  publisher = {Association for Computing Machinery},
  series    = {WWW '23},
  abstract  = {Intensive monitoring and anomaly diagnosis have become a knotty problem for modern microservice architecture due to the dynamics of service dependency. While most previous studies rely heavily on ample monitoring metrics, we raise a fundamental but always neglected issue - the diagnostic metric integrity problem. This paper solves the problem by proposing MicroCU – a novel approach to diagnose microservice systems using very sparse API logs. We design a structure named dynamic causal curves to portray time-varying service dependencies and a temporal dynamics discovery algorithm based on Granger causal intervals. Our algorithm generates a smoother space of causal curves and designs the concept of causal unimodalization to calibrate the causality infidelities brought by missing metrics. Finally, a path search algorithm on dynamic causality graphs is proposed to pinpoint the root cause. Experiments on commercial system cases show that MicroCU outperforms many state-of-the-art approaches and reflects the superiorities of causal unimodalization to raw metric imputation.},
  doi       = {10.1145/3543507.3583338},
  file      = {:Jiang2023 - Look Deep into the Microservice System Anomaly through Very Sparse Logs.pdf:PDF},
  isbn      = {9781450394161},
  keywords  = {Microservice architecture, Anomaly diagnosis, Root cause analysis, Dynamic Granger causality},
  location  = {Austin, TX, USA},
  numpages  = {9},
}

@InProceedings{Yilmaz2021,
  author    = {Yilmaz, Rahime and Buzluca, Feza},
  booktitle = {2021 2nd International Informatics and Software Engineering Conference (IISEC)},
  title     = {A Fuzzy Quality Model to Measure the Maintainability of Microservice Architectures},
  year      = {2021},
  pages     = {1-6},
  doi       = {10.1109/IISEC54230.2021.9672417},
  file      = {:Yilmaz2021 - A Fuzzy Quality Model to Measure the Maintainability of Microservice Architectures.pdf:PDF},
}

@InProceedings{Moreira2022,
  author    = {Moreira, Mateus Gabi and De Fran\c{c}a, Breno Bernard Nicolau},
  booktitle = {Proceedings of the 16th Brazilian Symposium on Software Components, Architectures, and Reuse},
  title     = {Analysis of Microservice Evolution Using Cohesion Metrics},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {40–49},
  publisher = {Association for Computing Machinery},
  series    = {SBCARS '22},
  abstract  = {The adoption of Microservices Architecture (MSA) has increased in recent years due to several claimed benefits, such as reducing deployment complexity, supporting technology diversity, and better scalability. However, MSA is not free from maintainability issues, especially the lack of cohesion, in which microservices possibly concentrate or miss responsibilities. Also, the lack of empirically-validated cohesion metrics for MSA makes the quantitative assessment even more challenging. In this paper, we empirically explore the practical applicability of service-level cohesion metrics in an open-source MSA application context. The qualitative results show the possibility of assessing MSA cohesion using these service-level metrics, the feasibility of tracking software evolution, and an indication of possible technical debts along the way.},
  doi       = {10.1145/3559712.3559716},
  file      = {:Moreira2022 - Analysis of Microservice Evolution Using Cohesion Metrics.pdf:PDF},
  isbn      = {9781450397452},
  keywords  = {Cohesion Metrics, Software evolution, Microservices, Software architecture},
  location  = {Uberlandia, Brazil},
  numpages  = {10},
}

@InProceedings{Camilli2022,
  author    = {Camilli, Matteo and Guerriero, Antonio and Janes, Andrea and Russo, Barbara and Russo, Stefano},
  booktitle = {Proceedings of the 3rd ACM/IEEE International Conference on Automation of Software Test},
  title     = {Microservices Integrated Performance and Reliability Testing},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {29–39},
  publisher = {Association for Computing Machinery},
  series    = {AST '22},
  abstract  = {Continuous quality assurance for extra-functional properties of modern software systems is today a big challenge as their complexity is constantly increasing to satisfy market demands. This is the case of microservice systems. They provide high control on the scale of operation by means of fine-grained service decomposition, but this demands careful consideration of the relations between performance of individual microservices and service failures.In this work, we propose MIPaRT, a novel methodology, and platform to automatically test microservice operations for performance and reliability in combination. The proposed platform can be integrated into a DevOps cycle to support continuous testing and monitoring by the automatic (1) generation and execution of performance-reliability ex-vivo testing sessions, (2) collection of monitoring data, (3) computation of performance and reliability metrics, and (4) integrated visualization of the results.We apply our approach by operating the platform on an open source benchmark. Results show that our integrated approach can provide additional insights into the performance and reliability behaviour of microservices as well as their mutual relationships.},
  doi       = {10.1145/3524481.3527233},
  file      = {:Camilli2022 - Microservices Integrated Performance and Reliability Testing.pdf:PDF},
  isbn      = {9781450392860},
  keywords  = {performance testing, reliability testing, microservices systems},
  location  = {Pittsburgh, Pennsylvania},
  numpages  = {11},
}

@InProceedings{Peng2022,
  author    = {Peng, Xin and Zhang, Chenxi and Zhao, Zhongyuan and Isami, Akasaka and Guo, Xiaofeng and Cui, Yunna},
  booktitle = {Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  title     = {Trace Analysis Based Microservice Architecture Measurement},
  year      = {2022},
  address   = {New York, NY, USA},
  pages     = {1589–1599},
  publisher = {Association for Computing Machinery},
  series    = {ESEC/FSE 2022},
  abstract  = {Microservice architecture design highly relies on expert experience and may often result in improper service decomposition. Moreover, a microservice architecture is likely to degrade with the continuous evolution of services. Architecture measurement is thus important for the long-term evolution of microservice architectures. Due to the independent and dynamic nature of services, source code analysis based approaches cannot well capture the interactions between services. In this paper, we propose a trace analysis based microservice architecture measurement approach. We define a trace data model for microservice architecture measurement, which enables fine-grained analysis of the execution processes of requests and the interactions between interfaces and services. Based on the data model, we define 14 architectural metrics to measure the service independence and invocation chain complexity of a microservice system. We implement the approach and conduct three case studies with a student course project, an open-source microservice benchmark system, and three industrial microservice systems. The results show that our approach can well characterize the independence and invocation chain complexity of microservice architectures and help developers to identify microservice architecture issues caused by improper service decomposition and architecture degradation.},
  doi       = {10.1145/3540250.3558951},
  file      = {:Peng2022 - Trace Analysis Based Microservice Architecture Measurement.pdf:PDF},
  isbn      = {9781450394130},
  keywords  = {Dynamic analysis, Architecture, Tracing, Microservice},
  location  = {Singapore, Singapore},
  numpages  = {11},
}

@InProceedings{Straesser2023,
  author    = {Straesser, Martin and Eismann, Simon and von Kistowski, J\'{o}akim and Bauer, Andr\'{e} and Kounev, Samuel},
  booktitle = {Proceedings of the 2023 ACM/SPEC International Conference on Performance Engineering},
  title     = {Autoscaler Evaluation and Configuration: A Practitioner's Guideline},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {31–41},
  publisher = {Association for Computing Machinery},
  series    = {ICPE '23},
  abstract  = {Autoscalers are indispensable parts of modern cloud deployments and determine the service quality and cost of a cloud application in dynamic workloads. The configuration of an autoscaler strongly influences its performance and is also one of the biggest challenges and showstoppers for the practical applicability of many research autoscalers. Many proposed cloud experiment methodologies can only be partially applied in practice, and many autoscaling papers use custom evaluation methods and metrics. This paper presents a practical guideline for obtaining meaningful and interpretable results on autoscaler performance with reasonable overhead. We provide step-by-step instructions for defining realistic usage behaviors and traffic patterns. We divide the analysis of autoscaler performance into a qualitative antipattern-based analysis and a quantitative analysis. To demonstrate the applicability of our guideline, we conduct several experiments with a microservice of our industry partner in a realistic test environment.},
  doi       = {10.1145/3578244.3583721},
  file      = {:Straesser2023 - Autoscaler Evaluation and Configuration_ a Practitioner's Guideline.pdf:PDF},
  isbn      = {9798400700682},
  keywords  = {guideline, autoscaling, methodology, evaluation, antipatterns},
  location  = {Coimbra, Portugal},
  numpages  = {11},
}

@InProceedings{Straesser2023a,
  author    = {Straesser, Martin and Mathiasch, Jonas and Bauer, Andr\'{e} and Kounev, Samuel},
  booktitle = {Proceedings of the 2023 ACM/SPEC International Conference on Performance Engineering},
  title     = {A Systematic Approach for Benchmarking of Container Orchestration Frameworks},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {187–198},
  publisher = {Association for Computing Machinery},
  series    = {ICPE '23},
  abstract  = {Container orchestration frameworks play a critical role in modern cloud computing paradigms such as cloud-native or serverless computing. They significantly impact the quality and cost of service deployment as they manage many performance-critical tasks such as container provisioning, scheduling, scaling, and networking. Consequently, a comprehensive performance assessment of container orchestration frameworks is essential. However, until now, there is no benchmarking approach that covers the many different tasks implemented in such platforms and supports evaluating different technology stacks. In this paper, we present a systematic approach that enables benchmarking of container orchestrators. Based on a definition of container orchestration, we define the core requirements and benchmarking scope for such platforms. Each requirement is then linked to metrics and measurement methods, and a benchmark architecture is proposed. With COFFEE, we introduce a benchmarking tool supporting the definition of complex test campaigns for container orchestration frameworks. We demonstrate the potential of our approach with case studies of the frameworks Kubernetes and Nomad in a self-hosted environment and on the Google Cloud Platform. The presented case studies focus on container startup times, crash recovery, rolling updates, and more.},
  doi       = {10.1145/3578244.3583726},
  file      = {:Straesser2023a - A Systematic Approach for Benchmarking of Container Orchestration Frameworks.pdf:PDF},
  isbn      = {9798400700682},
  keywords  = {nomad, kubernetes, benchmarking, performance, container orchestration},
  location  = {Coimbra, Portugal},
  numpages  = {12},
}

@InProceedings{Klinaku2023,
  author    = {Klinaku, Floriment and Speth, Sandro and Zilch, Markus and Becker, Steffen},
  booktitle = {Companion of the 2023 ACM/SPEC International Conference on Performance Engineering},
  title     = {Hitchhiker's Guide for Explainability in Autoscaling},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {277–282},
  publisher = {Association for Computing Machinery},
  series    = {ICPE '23 Companion},
  abstract  = {Cloud-native applications force increasingly powerful and complex autoscalers to guarantee the applications' quality of service. For software engineers with operational tasks understanding the autoscalers' behavior and applying appropriate reconfigurations is challenging due to their internal mechanisms, inherent distribution, and decentralized decision-making. Hence, engineers seek appropriate explanations. However, engineers' expectations on feedback and explanations of autoscalers are unclear. In this paper, through a workshop with a representative sample of engineers responsible for operating an autoscaler, we elicit requirements for explainability in autoscaling. Based on the requirements, we propose an evaluation scheme for evaluating explainability as a non-functional property of the autoscaling process and guide software engineers in choosing the best-fitting autoscaler for their scenario. The evaluation scheme is based on a Goal Question Metric approach and contains three goals, nine questions to assess explainability, and metrics to answer these questions. The evaluation scheme should help engineers choose a suitable and explainable autoscaler or guide them in building their own.},
  doi       = {10.1145/3578245.3584728},
  file      = {:Klinaku2023 - Hitchhiker's Guide for Explainability in Autoscaling.pdf:PDF},
  isbn      = {9798400700729},
  keywords  = {evaluation, elasticity, explainability, requirements, cloud},
  location  = {Coimbra, Portugal},
  numpages  = {6},
}

@InProceedings{Volpert2023,
  author    = {Volpert, Simon and Erb, Benjamin and Eisenhart, Georg and Seybold, Daniel and Wesner, Stefan and Domaschka, J\"{o}rg},
  booktitle = {Proceedings of the 2023 ACM/SPEC International Conference on Performance Engineering},
  title     = {A Methodology and Framework to Determine the Isolation Capabilities of Virtualisation Technologies},
  year      = {2023},
  address   = {New York, NY, USA},
  pages     = {149–160},
  publisher = {Association for Computing Machinery},
  series    = {ICPE '23},
  abstract  = {The capability to isolate system resources is an essential characteristic of virtualisation technologies and is therefore important for research and industry alike. It allows the co-location of experiments and workloads, the partitioning of system resources and enables multi-tenant business models such as cloud computing. Poor isolation among tenants bears the risk of noisy-neighbour and contention effects which negatively impacts all of those use-cases. These effects describe the negative impact of one tenant onto another by utilising shared resources. Both industry and research provide many different concepts and technologies to realise isolation. Yet, the isolation capabilities of all these different approaches are not well understood; nor is there an established way to measure the quality of their isolation capabilities. Such an understanding, however, is of uttermost importance in practice to elaborately decide on a suited implementation. Hence, in this work, we present a novel methodology to measure the isolation capabilities of virtualisation technologies for system resources, that fulfils all requirements to benchmarking including reliability. It relies on an immutable approach, based on Experiment-as-Code. The complete process holistically includes everything from bare metal resource provisioning to the actual experiment enactment.The results determined by this methodology help in the decision for a virtualisation technology regarding its capability to isolate given resources. Such results are presented here as a closing example in order to validate the proposed methodology.},
  doi       = {10.1145/3578244.3583728},
  file      = {:Volpert2023 - A Methodology and Framework to Determine the Isolation Capabilities of Virtualisation Technologies.pdf:PDF},
  isbn      = {9798400700682},
  keywords  = {framework, isolation, virtualisation, benchmarking},
  location  = {Coimbra, Portugal},
  numpages  = {12},
}

@InProceedings{Pulnil2022,
  author    = {Pulnil, Sermsook and Senivongse, Twittie},
  booktitle = {2022 19th International Joint Conference on Computer Science and Software Engineering (JCSSE)},
  title     = {A Microservices Quality Model Based on Microservices Anti-patterns},
  year      = {2022},
  pages     = {1-6},
  doi       = {10.1109/JCSSE54890.2022.9836297},
}

@InProceedings{Zaragoza2022a,
  author    = {Zaragoza, Pascal and Seriai, Abdelhak-Djamel and Seriai, Abderrahmane and Shatnawi, Anas and Derras, Mustapha},
  booktitle = {2022 IEEE 19th International Conference on Software Architecture (ICSA)},
  title     = {Leveraging the Layered Architecture for Microservice Recovery},
  year      = {2022},
  pages     = {135-145},
  doi       = {10.1109/ICSA53651.2022.00021},
  file      = {:Zaragoza2022a - Leveraging the Layered Architecture for Microservice Recovery.pdf:PDF},
}

@InProceedings{Basciftci2022,
  author    = {Basciftci, Fatih and Aydemir, Fikri},
  booktitle = {2022 IEEE 20th Jubilee International Symposium on Intelligent Systems and Informatics (SISY)},
  title     = {Strategies for Request-Response Logging in Microservices Architecture},
  year      = {2022},
  pages     = {000121-000126},
  doi       = {10.1109/SISY56759.2022.10036308},
}

@Article{BalcaoFilho2023,
  author  = {Balcão-Filho, Amandio and Ruiz, Natasha and Rosa, Ferrucio de Franco and Bonacin, Rodrigo and Jino, Mario},
  journal = {IEEE Transactions on Services Computing},
  title   = {Applying a Consumer-Centric Framework for Trust Assessment of Cloud Computing Service Providers},
  year    = {2023},
  number  = {1},
  pages   = {95-107},
  volume  = {16},
  doi     = {10.1109/TSC.2021.3134125},
  file    = {:BalcaoFilho2023 - Applying a Consumer Centric Framework for Trust Assessment of Cloud Computing Service Providers.pdf:PDF},
}

@InCollection{Gudenkauf2023,
  author    = {Stefan Gudenkauf and Uwe Bachmann and Niklas Hartmann},
  booktitle = {Lecture Notes in Business Information Processing},
  publisher = {Springer International Publishing},
  title     = {A Concept and a Multitenant Web Application for Interactive Software Architecture Analysis},
  year      = {2023},
  pages     = {268--283},
  doi       = {10.1007/978-3-031-26886-1_16},
  file      = {:Gudenkauf2023 - A Concept and a Multitenant Web Application for Interactive Software Architecture Analysis.pdf:PDF},
}

@Article{Adewojo2023,
  author    = {Adekunbi A. Adewojo and Julian M. Bass},
  journal   = {{SN} Computer Science},
  title     = {A Novel Weight-Assignment Load Balancing Algorithm for Cloud Applications},
  year      = {2023},
  month     = {mar},
  number    = {3},
  volume    = {4},
  doi       = {10.1007/s42979-023-01702-7},
  file      = {:Adewojo2023 - A Novel Weight Assignment Load Balancing Algorithm for Cloud Applications.pdf:PDF},
  publisher = {Springer Science and Business Media {LLC}},
}

@Article{Erdei2023,
  author    = {Roland Erdei and Laszlo Toka},
  journal   = {Journal of Network and Systems Management},
  title     = {Minimizing Resource Allocation for Cloud-Native Microservices},
  year      = {2023},
  month     = {feb},
  number    = {2},
  volume    = {31},
  doi       = {10.1007/s10922-023-09726-3},
  file      = {:Erdei2023 - Minimizing Resource Allocation for Cloud Native Microservices.pdf:PDF},
  publisher = {Springer Science and Business Media {LLC}},
}

@InCollection{Huang2023,
  author    = {Xiaoli Huang and Andi Liu and Yizhong Liu and Li Li and Zhenglin Lv and Fan Wang},
  booktitle = {Lecture Notes in Computer Science},
  publisher = {Springer Nature Switzerland},
  title     = {Construction Practice of~Cloud Billing Message Based on~Stream Native},
  year      = {2023},
  pages     = {414--427},
  doi       = {10.1007/978-3-031-28124-2_40},
  file      = {:Huang2023 - Construction Practice Of~Cloud Billing Message Based On~Stream Native.pdf:PDF},
}

@Article{Henning2022,
  author    = {Sören Henning and Wilhelm Hasselbring},
  journal   = {Empirical Software Engineering},
  title     = {A configurable method for benchmarking scalability of cloud-native applications},
  year      = {2022},
  month     = {aug},
  number    = {6},
  volume    = {27},
  doi       = {10.1007/s10664-022-10162-1},
  file      = {:Henning2022 - A Configurable Method for Benchmarking Scalability of Cloud Native Applications.pdf:PDF},
  publisher = {Springer Science and Business Media {LLC}},
}

@Article{Mechouche2022,
  author    = {Jeremy Mechouche and Roua Touihri and Mohamed Sellami and Walid Gaaloul},
  journal   = {The Journal of Supercomputing},
  title     = {Conformance checking for autonomous multi-cloud {SLA} management and adaptation},
  year      = {2022},
  month     = {mar},
  number    = {11},
  pages     = {13004--13039},
  volume    = {78},
  doi       = {10.1007/s11227-022-04363-0},
  file      = {:Mechouche2022 - Conformance Checking for Autonomous Multi Cloud SLA Management and Adaptation.pdf:PDF},
  publisher = {Springer Science and Business Media {LLC}},
}

@InCollection{Lichtenthaeler2022,
  author    = {Robin Lichtenthäler and Guido Wirtz},
  booktitle = {Service-Oriented and Cloud Computing},
  publisher = {Springer International Publishing},
  title     = {Towards a~Quality Model for~Cloud-native Applications},
  year      = {2022},
  pages     = {109--117},
  doi       = {10.1007/978-3-031-04718-3_7},
}

@InCollection{Vitali2022,
  author    = {Monica Vitali},
  booktitle = {Advanced Information Systems Engineering},
  publisher = {Springer International Publishing},
  title     = {Towards Greener Applications: Enabling Sustainable-aware Cloud Native Applications Design},
  year      = {2022},
  pages     = {93--108},
  doi       = {10.1007/978-3-031-07472-1_6},
  file      = {:Vitali2022 - Towards Greener Applications_ Enabling Sustainable Aware Cloud Native Applications Design.pdf:PDF},
}

@InCollection{Gruenewald2022,
  author    = {Elias Grünewald},
  booktitle = {Privacy and Identity Management. Between Data Protection and Security},
  publisher = {Springer International Publishing},
  title     = {Cloud Native Privacy Engineering through {DevPrivOps}},
  year      = {2022},
  pages     = {122--141},
  doi       = {10.1007/978-3-030-99100-5_10},
  file      = {:Gruenewald2022 - Cloud Native Privacy Engineering through DevPrivOps.pdf:PDF},
}

@InCollection{SerranoGutierrez2023,
  author    = {Pablo Serrano-Gutierrez and Inmaculada Ayala and Lidia Fuentes},
  booktitle = {Service-Oriented Computing {\textendash} {ICSOC} 2022 Workshops},
  publisher = {Springer Nature Switzerland},
  title     = {{FUSPAQ}: A Function Selection Platform to Adjust {QoS} in a {FaaS} Application},
  year      = {2023},
  pages     = {249--260},
  doi       = {10.1007/978-3-031-26507-5_20},
  file      = {:SerranoGutierrez2023 - FUSPAQ_ a Function Selection Platform to Adjust QoS in a FaaS Application.pdf:PDF},
}

@InCollection{Beltran2023,
  author    = {Daniela Beltran and Mariela Curiel},
  booktitle = {Communications in Computer and Information Science},
  publisher = {Springer Nature Switzerland},
  title     = {Comparison of Deployment Options for Microservices in the Cloud},
  year      = {2023},
  pages     = {44--57},
  doi       = {10.1007/978-3-031-36357-3_4},
  file      = {:Beltran2023 - Comparison of Deployment Options for Microservices in the Cloud.pdf:PDF},
}

@InCollection{BermonAngarita2023,
  author    = {Leonardo Bermon-Angarita and N{\'{e}}stor Dar{\'{\i}}o Duque-M{\'{e}}ndez and Claudia Patricia R{\'{\i}}os-Ruiz},
  booktitle = {Communications in Computer and Information Science},
  publisher = {Springer Nature Switzerland},
  title     = {Expert System for Software Architecture Selection},
  year      = {2023},
  pages     = {73--86},
  doi       = {10.1007/978-3-031-36357-3_6},
  file      = {:BermonAngarita2023 - Expert System for Software Architecture Selection.pdf:PDF},
}

@InCollection{Ghazouani2022,
  author    = {Souad Ghazouani and Anis Tissaoui and Richard Chbeir},
  booktitle = {Web Services {\textendash} {ICWS} 2021},
  publisher = {Springer International Publishing},
  title     = {Cloud-{WSDL}: Making {WSDL} Suitable for Cloud Computing},
  year      = {2022},
  pages     = {1--14},
  doi       = {10.1007/978-3-030-96140-4_1},
  file      = {:Ghazouani2022 - Cloud WSDL_ Making WSDL Suitable for Cloud Computing.pdf:PDF},
}

@InCollection{Yussupov2022,
  author    = {Vladimir Yussupov and Uwe Breitenbücher and Antonio Brogi and Lukas Harzenetter and Frank Leymann and Jacopo Soldani},
  booktitle = {Service-Oriented Computing},
  publisher = {Springer International Publishing},
  title     = {Serverless or~Serverful? A~Pattern-Based Approach for~Exploring Hosting Alternatives},
  year      = {2022},
  pages     = {45--67},
  doi       = {10.1007/978-3-031-18304-1_3},
  file      = {:Yussupov2022 - Serverless Or~Serverful_ A~Pattern Based Approach For~Exploring Hosting Alternatives.pdf:PDF},
}

@InCollection{Kumara2022,
  author    = {Indika Kumara and Alfio Lazzaro and Nina Mujkanovic and Zoe Vasileiou and Damian A. Tamburri},
  booktitle = {Deployment and Operation of Complex Software in Heterogeneous Execution Environments},
  publisher = {Springer International Publishing},
  title     = {Quality Assurance and Design-Time Optimization},
  year      = {2022},
  pages     = {53--66},
  doi       = {10.1007/978-3-031-04961-3_4},
  file      = {:Kumara2022 - Quality Assurance and Design Time Optimization.pdf:PDF},
}

@InProceedings{Vale2022,
  author    = {Vale, Guilherme and Correia, Filipe Figueiredo and Guerra, Eduardo Martins and de Oliveira Rosa, Thatiane and Fritzsch, Jonas and Bogner, Justus},
  booktitle = {2022 IEEE 19th International Conference on Software Architecture (ICSA)},
  title     = {Designing Microservice Systems Using Patterns: An Empirical Study on Quality Trade-Offs},
  year      = {2022},
  pages     = {69-79},
  doi       = {10.1109/ICSA53651.2022.00015},
  file      = {:Vale2022 - Designing Microservice Systems Using Patterns_ an Empirical Study on Quality Trade Offs.pdf:PDF},
}

@Article{Alonso2023,
  author    = {Juncal Alonso and Leire Orue-Echevarria and Valentina Casola and Ana Isabel Torre and Maider Huarte and Eneko Osaba and Jesus L. Lobo},
  journal   = {Journal of Cloud Computing},
  title     = {Understanding the challenges and novel architectural models of multi-cloud native applications {\textendash} a systematic literature review},
  year      = {2023},
  month     = {jan},
  number    = {1},
  volume    = {12},
  doi       = {10.1186/s13677-022-00367-6},
  file      = {:Alonso2023 - Understanding the Challenges and Novel Architectural Models of Multi Cloud Native Applications _ a Systematic Literature Review.pdf:PDF},
  publisher = {Springer Science and Business Media {LLC}},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: fileDirectory-robin-robin-x1-carbon10:../../pdfs;}

@Comment{jabref-meta: saveActions:disabled;
all-text-fields[identity]
date[normalize_date]
month[normalize_month]
pages[normalize_page_numbers]
;}
